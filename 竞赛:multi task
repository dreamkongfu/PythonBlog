参考：
https://blog.csdn.net/xiaoxiao133/article/details/79653954
keras构建两种特征输入，两个输出同时训练
https://keras.io/guides/functional_api/#getting-started-with-the-keras-functional-api
一，定义多个input，多个output层，
        title_input = keras.Input(
            shape=(None,), name="title"
        )  # Variable-length sequence of ints
        body_input = keras.Input(shape=(None,), name="body")  # Variable-length sequence of ints
        tags_input = keras.Input(
            shape=(num_tags,), name="tags"
        )  # B
二。生成Model，带inputs list,outputs list
        model = keras.Model(
            inputs=[title_input, body_input, tags_input],
            outputs=[priority_pred, department_pred],
        )
展示model结构：
        keras.utils.plot_model(model, "multi_input_and_output_model.png", show_shapes=True)

三，Model.compile 可以针对多个结果有多个loss,给loss分配不同的权重

        model.compile(
            optimizer=keras.optimizers.RMSprop(1e-3),
            loss={
                "priority": keras.losses.BinaryCrossentropy(from_logits=True),
                "department": keras.losses.CategoricalCrossentropy(from_logits=True),
            },
            loss_weights=[1.0, 0.2],
        )

四，MOdel.fit ,放入多个数据list
        model.fit(
            {"title": title_data, "body": body_data, "tags": tags_data},
            {"priority": priority_targets, "department": dept_targets},
            epochs=2,
            batch_size=32,
        )
